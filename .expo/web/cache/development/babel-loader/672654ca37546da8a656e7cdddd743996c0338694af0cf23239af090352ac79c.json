{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { auth } from \"../../FirebaseConfig\";\nimport fondochat from \"../../assets/fondochat.png\";\nimport logo500 from \"../../assets/logo500.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInChat = function SignInChat(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMember = _useState2[0],\n    setIsMember = _useState2[1];\n  useEffect(function () {\n    var checkMembershipStatus = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var _userDoc$data;\n          var user = auth.currentUser;\n          var userDoc = yield firestore.collection('users').doc(user.uid).get();\n          setIsMember((_userDoc$data = userDoc.data()) == null ? void 0 : _userDoc$data.isMember);\n          setIsMember(true);\n        } catch (error) {\n          console.error('Error checking membership status:', error);\n        }\n      });\n      return function checkMembershipStatus() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkMembershipStatus();\n  }, []);\n  var handleMemberPress = function handleMemberPress() {\n    navigation.navigate('Chat');\n  };\n  var handleBecomeMemberPress = function handleBecomeMemberPress() {\n    console.log('Navigate to become a member screen or show a message.');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'start'\n    },\n    children: [_jsx(Image, {\n      source: fondochat,\n      resizeMode: \"cover\",\n      style: {\n        width: Dimensions.get('window').width,\n        height: 200\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white',\n        borderTopLeftRadius: 90,\n        marginTop: -44,\n        alignItems: 'center',\n        paddingTop: 20,\n        paddingHorizontal: 20\n      },\n      children: isMember ? _jsx(Button, {\n        title: \"Enter Chat\",\n        onPress: handleMemberPress\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          children: \"You are not a member yet. Become a member to access the chat.\"\n        }), _jsx(Button, {\n          title: \"Become a Member\",\n          onPress: handleBecomeMemberPress\n        })]\n      })\n    })]\n  });\n};\nexport default SignInChat;","map":{"version":3,"names":["React","useState","useEffect","View","Image","Dimensions","Button","Text","auth","fondochat","logo500","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignInChat","_ref","navigation","_useState","_useState2","_slicedToArray","isMember","setIsMember","checkMembershipStatus","_ref2","_asyncToGenerator","_userDoc$data","user","currentUser","userDoc","firestore","collection","doc","uid","get","data","error","console","apply","arguments","handleMemberPress","navigate","handleBecomeMemberPress","log","style","flex","alignItems","justifyContent","children","source","resizeMode","width","height","backgroundColor","borderTopLeftRadius","marginTop","paddingTop","paddingHorizontal","title","onPress"],"sources":["C:/Users/merce/Desktop/NuevoYoSoyElPremio/NYSP/src/screens/SignInChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Image, Dimensions, Button, Text } from 'react-native';\nimport { auth } from '../../FirebaseConfig';\n\nimport fondochat from '../../assets/fondochat.png';\nimport logo500 from '../../assets/logo500.png';\n\nconst SignInChat = ({ navigation }) => {\n  const [isMember, setIsMember] = useState(false);\n\n  useEffect(() => {\n    const checkMembershipStatus = async () => {\n      try {\n        const user = auth.currentUser;\n\n        // Aquí debes obtener el valor de 'isMember' desde Firestore o Realtime Database.\n        // Establece setIsMember(true) si el usuario es miembro.\n\n        // Ejemplo utilizando Firestore:\n         const userDoc = await firestore.collection('users').doc(user.uid).get();\n       setIsMember(userDoc.data()?.isMember);\n\n        // Ejemplo utilizando Realtime Database:\n        // const userSnapshot = await database.ref(`users/${user.uid}`).once('value');\n        // setIsMember(userSnapshot.val()?.isMember);\n\n        // Simulación (debes implementar la lógica real):\n        setIsMember(true);  // Esto debería establecerse según la lógica real.\n      } catch (error) {\n        console.error('Error checking membership status:', error);\n      }\n    };\n\n    checkMembershipStatus();\n  }, []);\n\n  const handleMemberPress = () => {\n    // Aquí decides qué hacer cuando el usuario ya es miembro.\n    // Podría ser navegar a la siguiente pantalla del chat.\n    navigation.navigate('Chat');\n  };\n\n  const handleBecomeMemberPress = () => {\n    // Aquí decides qué hacer cuando el usuario no es miembro.\n    // Podría ser mostrar un mensaje o navegar a la pantalla para hacerse miembro.\n    // Puedes personalizar esta lógica según tus necesidades.\n    console.log('Navigate to become a member screen or show a message.');\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'start' }}>\n      <Image\n        source={fondochat}\n        resizeMode='cover'\n        style={{ width: Dimensions.get('window').width, height: 200 }}\n      />\n      <View style={{ flex: 1, backgroundColor: 'white', borderTopLeftRadius: 90, marginTop: -44, alignItems: 'center', paddingTop: 20, paddingHorizontal: 20, }}>\n        {isMember ? (\n          <Button title=\"Enter Chat\" onPress={handleMemberPress} />\n        ) : (\n          <>\n            <Text>You are not a member yet. Become a member to access the chat.</Text>\n            <Button title=\"Become a Member\" onPress={handleBecomeMemberPress} />\n          </>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default SignInChat;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}