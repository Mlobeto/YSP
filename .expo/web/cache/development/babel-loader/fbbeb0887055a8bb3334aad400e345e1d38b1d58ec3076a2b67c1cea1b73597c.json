{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar lodash_1 = require(\"lodash\");\nvar Country = function () {\n  function Country() {\n    _classCallCheck(this, Country);\n    this.countryCodes = [];\n    this.countriesData = null;\n  }\n  _createClass(Country, [{\n    key: \"setCustomCountriesData\",\n    value: function setCustomCountriesData(json) {\n      this.countriesData = json;\n    }\n  }, {\n    key: \"addCountryCode\",\n    value: function addCountryCode(iso2, dialCode, priority) {\n      if (!(dialCode in this.countryCodes)) {\n        this.countryCodes[dialCode] = [];\n      }\n      var index = priority || 0;\n      this.countryCodes[dialCode][index] = iso2;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      if (!this.countries) {\n        this.countries = (0, lodash_1.orderBy)(this.countriesData || require(\"./resources/countries.json\"), ['name'], ['asc']);\n      }\n      return this.countries;\n    }\n  }, {\n    key: \"getCountryCodes\",\n    value: function getCountryCodes() {\n      var _this = this;\n      if (!this.countryCodes.length) {\n        this.getAll().forEach(function (country) {\n          _this.addCountryCode(country.iso2, country.dialCode, country.priority);\n          if (country.areaCodes) {\n            country.areaCodes.forEach(function (areaCode) {\n              _this.addCountryCode(country.iso2, country.dialCode + areaCode);\n            });\n          }\n        });\n      }\n      return this.countryCodes;\n    }\n  }, {\n    key: \"getCountryDataByCode\",\n    value: function getCountryDataByCode(iso2) {\n      return (0, lodash_1.find)(this.getAll(), function (country) {\n        return country.iso2 === iso2;\n      });\n    }\n  }]);\n  return Country;\n}();\nexports.default = new Country();","map":{"version":3,"names":["lodash_1","require","Country","_classCallCheck","countryCodes","countriesData","_createClass","key","value","setCustomCountriesData","json","addCountryCode","iso2","dialCode","priority","index","getAll","countries","orderBy","getCountryCodes","_this","length","forEach","country","areaCodes","areaCode","getCountryDataByCode","find","exports","default"],"sources":["C:\\Users\\merce\\Desktop\\NuevoYoSoyElPremio\\NYSP\\node_modules\\react-native-phone-input\\src\\country.tsx"],"sourcesContent":["import { find, orderBy } from 'lodash';\n\nclass Country {\n    private countryCodes: any[];\n\n    private countriesData: any;\n\n    private countries: any;\n\n    constructor() {\n        this.countryCodes = [];\n\n        this.countriesData = null;\n    }\n\n    setCustomCountriesData(json) {\n        this.countriesData = json;\n    }\n\n    addCountryCode(iso2, dialCode: string, priority?) {\n        if (!(dialCode in this.countryCodes)) {\n            this.countryCodes[dialCode] = [];\n        }\n\n        const index = priority || 0;\n        this.countryCodes[dialCode][index] = iso2;\n    }\n\n    getAll() {\n        if (!this.countries) {\n            this.countries = orderBy(\n                this.countriesData || require('./resources/countries.json'), // eslint-disable-line global-require\n                ['name'],\n                ['asc'],\n            );\n        }\n\n        return this.countries;\n    }\n\n    getCountryCodes() {\n        if (!this.countryCodes.length) {\n            this.getAll().forEach((country) => {\n                this.addCountryCode(country.iso2, country.dialCode, country.priority);\n                if (country.areaCodes) {\n                    country.areaCodes.forEach((areaCode) => {\n                        this.addCountryCode(country.iso2, country.dialCode + areaCode);\n                    });\n                }\n            });\n        }\n        return this.countryCodes;\n    }\n\n    getCountryDataByCode(iso2) {\n        return find(this.getAll(), (country) => country.iso2 === iso2);\n    }\n}\n\nexport default new Country();\n"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAAuC,IAEjCC,OAAO;EAOT,SAAAA,QAAA;IAAAC,eAAA,OAAAD,OAAA;IACI,IAAI,CAACE,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACC,aAAa,GAAG,IAAI;EAC7B;EAACC,YAAA,CAAAJ,OAAA;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAC,uBAAuBC,IAAI;MACvB,IAAI,CAACL,aAAa,GAAGK,IAAI;IAC7B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,eAAeC,IAAI,EAAEC,QAAgB,EAAEC,QAAS;MAC5C,IAAI,EAAED,QAAQ,IAAI,IAAI,CAACT,YAAY,CAAC,EAAE;QAClC,IAAI,CAACA,YAAY,CAACS,QAAQ,CAAC,GAAG,EAAE;;MAGpC,IAAME,KAAK,GAAGD,QAAQ,IAAI,CAAC;MAC3B,IAAI,CAACV,YAAY,CAACS,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAGH,IAAI;IAC7C;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAQ,OAAA,EAAM;MACF,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;QACjB,IAAI,CAACA,SAAS,GAAG,IAAAjB,QAAA,CAAAkB,OAAO,EACpB,IAAI,CAACb,aAAa,IAAIJ,OAAO,6BAA6B,CAAC,EAC3D,CAAC,MAAM,CAAC,EACR,CAAC,KAAK,CAAC,CACV;;MAGL,OAAO,IAAI,CAACgB,SAAS;IACzB;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAW,gBAAA,EAAe;MAAA,IAAAC,KAAA;MACX,IAAI,CAAC,IAAI,CAAChB,YAAY,CAACiB,MAAM,EAAE;QAC3B,IAAI,CAACL,MAAM,EAAE,CAACM,OAAO,CAAC,UAACC,OAAO,EAAI;UAC9BH,KAAI,CAACT,cAAc,CAACY,OAAO,CAACX,IAAI,EAAEW,OAAO,CAACV,QAAQ,EAAEU,OAAO,CAACT,QAAQ,CAAC;UACrE,IAAIS,OAAO,CAACC,SAAS,EAAE;YACnBD,OAAO,CAACC,SAAS,CAACF,OAAO,CAAC,UAACG,QAAQ,EAAI;cACnCL,KAAI,CAACT,cAAc,CAACY,OAAO,CAACX,IAAI,EAAEW,OAAO,CAACV,QAAQ,GAAGY,QAAQ,CAAC;YAClE,CAAC,CAAC;;QAEV,CAAC,CAAC;;MAEN,OAAO,IAAI,CAACrB,YAAY;IAC5B;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAkB,qBAAqBd,IAAI;MACrB,OAAO,IAAAZ,QAAA,CAAA2B,IAAI,EAAC,IAAI,CAACX,MAAM,EAAE,EAAE,UAACO,OAAO;QAAA,OAAKA,OAAO,CAACX,IAAI,KAAKA,IAAI;MAAA,EAAC;IAClE;EAAC;EAAA,OAAAV,OAAA;AAAA;AAGL0B,OAAA,CAAAC,OAAA,GAAe,IAAI3B,OAAO,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}